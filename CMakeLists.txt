cmake_minimum_required(VERSION 3.2.1)
project(bauman.c.programming.labs)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
set(CMAKE_C_STANDARD 90)
set(CMAKE_C_STANDARD_REQUIRED ON)

find_package(Check REQUIRED)

if (MSVC)
    set(CMAKE_C_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} /SUBSYSTEM:CONSOLE /IGNORE:4099")
    set(CMAKE_CFLAGS "${CMAKE_CFLAGS} /arch:SSE2")
    if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
        set(CMAKE_CFLAGS "${CMAKE_CFLAGS} /MDd /bigobj")
        add_compile_options(/MDd /bigobj)
    else ()
        add_definitions(/MT)
        add_compile_options(/bigobj)
    endif ()
    add_definitions(/wd4267)
    add_definitions(/wd4250)
    add_definitions(/wd4996)
    add_definitions(/wd4334)
elseif (CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CFLAGS "${CMAKE_CFLAGS} -Wunused-result -pedantic -Wp,-w -msse -msse2 -msse3 -fPIC -Wunused-result ")
else ()
    set(CMAKE_CFLAGS "${CMAKE_CFLAGS} -std=c90 -pedantic -Wp,-w -fPIC ")
    set(CMAKE_LINK_LIBRARY_FLAG "${CMAKE_LINK_LIBRARY_FLAG} -fPIC ")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fPIC ")
    set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -fPIC ")
endif ()

#FIXME: For MocOSX, check library install with brew. Fnd this installation not automatic detected libraries and include directories
if (APPLE)
    set(CHECK_LIBRARIES /usr/local/lib/libcheck.a)
    set(CHECK_INCLUDE_DIR /usr/local/include)
elseif (UNIX)
    list(APPEND DEPENDENCY_LIBRARIES m dl pthread rt)
endif ()

include_directories(${CHECK_INCLUDE_DIR})

add_subdirectory(lab_07)
add_subdirectory(lab_08)
add_subdirectory(lab_09)
add_subdirectory(lab_10)
add_subdirectory(lab_11)
add_subdirectory(lab_12)

enable_testing()
